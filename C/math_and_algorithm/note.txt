009 - Brute Force 2 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点: 
1000 点

注意
この問題は 2.4 節（計算量と全探索）と 3.7 節（動的計画法）両方で扱います。
全探索で解いても 1000 点中 500 点しか得られず、満点（AC）にならないことに注意してください。（本に記されている通り、一部の大きいケースでは現実的な時間で答えが求まらないからです）

問題文
N 枚のカードが横一列に並べられています。左から i 番目 (1≤i≤N) のカードには整数 A(i) が書かれています。
カードの中からいくつかを選んで、合計がちょうど S となるようにする方法はありますか。

制約
1≤N≤60
1≤A(i)≤10000
1≤S≤10000
入力はすべて整数

部分点
1≤N≤20 について解けると、500 点が獲得できます。

入力
入力は以下の形式で標準入力から与えられます。
N S
A(1) A(2) A(3) … A(N)
​ 
出力
合計を S となるようにする方法が存在する場合は Yes、そうでない場合は No と出力してください。

入力例 1
3 11
2 5 9

出力例 1
Yes

解説
カード 1,3 を選べば合計が 11 になるので答えは Yes です。


018 - Convenience Store 1 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
コンビニには N 個の品物が売られており、i 番目（1≤i≤N）の商品の値段は A(i) 円です。 異なる 2 つの品物を買う方法のうち、合計金額が 500 円となるものは何通りありますか。

制約
2≤N≤200000
A(i) は 100,200,300,400 のいずれか
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N
A(1) A(2) ⋯ A(N)

出力
答えを出力してください。


019 - Choose Cards 1 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
N 枚のカードがあり、左から i 番目（1≤i≤N）のカードの色は A(i) です。 A(i)=1 のとき赤色、A(i)​ =2 のとき黄色、A(i)​ =3 のとき青色です。同じ色のカードを 2 枚選ぶ方法は何通りありますか。
制約
2≤N≤500000
1≤A(i)≤3
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N
A(1)​ A(2) ⋯ A(N)
​
出力
答えを出力してください。


020 - Choose Cards 2 
実行時間制限: 5 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
N 枚のカードがあり、左から i番目のカードには整数 A(i) が書かれています。
カードを 5枚選ぶ方法のうち、選んだカードに書かれた整数の和がちょうど 1000 となるものは何通りありますか。

制約
5≤N≤100
1≤A(i)≤1000
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N
A(1) A(2​) … A(N)
​
出力
答えを出力してください。


問題文
N 枚のカードがあり、左から i 番目のカードには整数 A i​ が書かれています。 和が 100000 となる 2 枚のカードの選び方は何通りあるかを求めるプログラムを作成してください。

制約
2≤N≤200000
1≤A i​ ≤99999
入力はすべて整数


042 - Sum of Divisors / 
実行時間制限: 3 sec / メモリ制限: 1024 MB

配点 : 
400 点

問題文
正整数 X に対し、X の正の約数の個数を f(X) とします。
正整数 N が与えられるので、∑ K=1N​ K×f(K) を求めてください。

制約
1≤N≤10^7
 
入力
入力は以下の形式で標準入力から与えられる。
N

出力
値 ∑ K=1N​ K×f(K) を出力せよ。

入力例 1
4

出力例 1
23

f(1)=1, f(2)=2, f(3)=2, f(4)=3 なので、答えは 1×1+2×2+3×2+4×3=23 となります。

入力例 2
100

出力例 2
26879

入力例 3
10000000

出力例 3
838627288460105

オーバーフローに注意してください。


043 - Depth First Search 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点 : 
1000 点

問題文
各頂点に 1,2,…,N の番号がついた、 N 頂点 M 辺の無向グラフが与えられます。
i 番目の辺は頂点 A i​ と頂点 B i​ とを結んでいます。
このグラフ全体が連結であるかどうか判定して以下のように出力してください。
もしグラフ全体が連結であれば、 The graph is connected. と出力する
そうでなければ、 The graph is not connected. と出力する

制約
入力はすべて整数
1≤N≤10^5
0≤M≤min(10^5, N(N−1)/2)
1≤A i​ <B i​ ≤N
グラフに多重辺や自己ループは存在しない

入力
入力は以下の形式で標準入力から与えられる。
N M
A 1​ B 1​
A 2​ B 2
​⋮
A M​ B M​

出力
問題文中の指示通り出力せよ。

入力例 1
3 2
1 3
2 3

出力例 1
The graph is connected.
与えられたグラフは連結です。

入力例 2
6 6
1 4
2 3
3 4
5 6
1 2
2 4

出力例 2
The graph is not connected.
与えられたグラフは連結ではありません。


044 - Shortest Path 1 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点 : 
1000 点

問題文
N 頂点 M 辺の無向グラフが与えられます。各頂点には 1 から N までの番号が付けられており、i 番目の辺は頂点 A_{i}​ と頂点 B_{i}​ を結んでいます。
1 以上 N 以下の全ての整数 k について、以下の問いに答えてください。
頂点 1 から頂点 k まで、辺を何本かたどって移動することを考えるとき、たどるべき辺の本数の最小値を出力せよ。ただし、移動不可能な場合は −1 を出力せよ。

制約
入力はすべて整数
1≤N≤10^5
0≤M≤min(10^5 , 2N(N−1)​ )
1≤A_{i}​<B_{i}≤N
グラフに多重辺や自己ループは存在しない

入力
入力は以下の形式で標準入力から与えられる。
N M
A_{1}​ B_{1}
​A_{2}​ B_{2}​
⋮
A_{M}​ B_{M}​

出力
全体で N 行出力してください。
i 行目には、 k=i の場合の答えを出力してください。

入力例 1
3 2
1 3
2 3

出力例 1
0
2
1

解説 1
頂点 1 から頂点 1 には、 0 本の辺を辿って移動可能であるとします。頂点 1 から頂点 2 に移動する際、 1→3→2 と移動すると辿る辺の数が最小になります。
頂点 1 から頂点 3 に移動する際、 1→3 と移動すると辿る辺の数が最小になります。

入力例 2
6 6
1 4
2 3
3 4
5 6
1 2
2 4

出力例 2
0
1
2
1
-1
-1

解説 2
与えられるグラフが連結であるとは限りません。


045 - Easy Graph Problem（★2） 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点：
2 点

問題文
N 頂点 M 辺の連結な単純無向グラフが与えられます。グラフの頂点には、それぞれ 1 から N までの番号が振られています。 i 番目の辺は、頂点 a_{i}​ と b_{i}​ を双方向に結んでいます。
以下の条件を満たす頂点の個数はいくつあるか出力してください。
自分自身より頂点番号が小さい隣接頂点がちょうど 1 つ存在する

制約
2≤N≤100000
N−1≤M≤min( 2N(N−1)​ ,100000)
1≤a_{i}​ ,b_{i}​ ≤N
与えられるグラフは単純グラフである
与えられるグラフは連結である
入力はすべて整数で与えられる

入力
入力は以下の形式で標準入力から与えられます。
N M
a_{1}​ b_{1}​ 
⋮
a_{M}​ b_{M}​

出力
条件を満たす頂点の個数を一行に出力してください。

入力例 1
5 5
1 2
1 3
3 2
5 2
4 2

出力例 1
3

解説 1
条件を満たす頂点は、2, 4, 5 の 3 つです。
頂点 2 は、自分自身より頂点番号が小さい隣接頂点として、頂点 1 のみをもつ
頂点 4 は、自分自身より頂点番号が小さい隣接頂点として、頂点 2 のみをもつ
頂点 5 は、自分自身より頂点番号が小さい隣接頂点として、頂点 2 のみをもつ

入力例 2
2 1
1 2

出力例 2
1

解説 2
条件を満たす頂点は 2 のみです。

入力例 3
7 18
7 2
1 6
5 2
1 3
7 6
5 3
5 6
5 4
1 7
2 6
3 4
5 1
4 7
4 6
5 7
3 2
4 2
1 4

出力例 3
0


046 - 幅優先探索 
実行時間制限: 2 sec / メモリ制限: 256 MB

問題文
たかはし君は迷路が好きです。今、上下左右に移動できる二次元盤面上の迷路を解こうとしています。盤面は以下のような形式で与えられます。
まず、盤面のサイズと、迷路のスタート地点とゴール地点の座標が与えられる。
次に、それぞれのマスが通行可能な空きマス(.)か通行不可能な壁マス(#)かという情報を持った盤面が与えられる。盤面は壁マスで囲まれている。スタート地点とゴール地点は必ず空きマスであり、スタート地点からゴール地点へは、空きマスを辿って必ずたどり着ける。具体的には、入出力例を参考にすると良い。
今、彼は上記の迷路を解くのに必要な最小移動手数を求めたいと思っています。どうやって求めるかを調べていたところ、「幅優先探索」という手法が効率的であることを知りました。幅優先探索というのは以下の手法です。
スタート地点から近い(たどり着くための最短手数が少ない)マスから順番に、たどり着く手数を以下のように確定していく。説明の例として図1の迷路を利用する。

図1. 説明に用いる盤面
最初に、スタート地点は、スタート地点から手数0でたどり着ける(当然)ので、最短手数0で確定させる(図2)。
図2. 最短手数0でたどり着けるマスが確定(初期)
次に、スタート地点の四近傍(上下左右)の空きマスについて、手数1で確定させる(図3)。
図3. 最短手数1でたどり着けるマスが確定
次に、手数1で確定したそれぞれのマスの4近傍を見て、まだ確定していない空きマスがあればそのマスを手数2で確定させる(図4)。
図4. 最短手数2でたどり着けるマスが確定
次に、手数2で確定したそれぞれのマスの4近傍を見て、まだ確定していない空きマスがあればそのマスを手数3で確定させる(図5)。
図5. 最短手数3でたどり着けるマスが確定
次に、手数3で確定したそれぞれのマスの4近傍を見て、まだ確定していない空きマスがあればそのマスを手数4で確定させる(図6)。
図6. 最短手数4でたどり着けるマスが確定
上記の手順を確定の更新が無くなるまで繰り返すと、スタート地点からたどり着ける全ての空きマスについて最短手数が確定する(図7)。スタートとゴールは必ず空きマスを辿ってたどり着けるという制約があるので、ゴール地点への最短手数も分かる。
図7. すべてのたどり着けるマスへの最短手数が確定
さて、この処理をスマートに実装するためには、先入れ先出し(FIFO)のキュー(Queue)というデータ構造を用いると良いことが知られています。もちろん、使わなくても解くことは可能です。今回、よく分からなければ思いついた方法で解くことをおすすめします。先入れ先出しのキューとは以下のような機能を持つデータ構造です。
追加(Push): キューの末尾にデータを追加する。
取り出し(Pop): キューの先頭のデータを取り出す。
このデータ構造を使うと、先ほどの幅優先探索の説明における「マスの最短手数の確定」のタイミングでその確定マスをキューに追加し、追加操作が終わればPopを行い、取り出したマスの4近傍を調べるということを繰り返せば(つまり先に追加されたものから順番に処理していけば)、簡潔に処理ができることが分かります。

入力
入力は以下の形式で標準入力から与えられる。
R C
sy sx
gy gx
c (1,1)​ c (1,2)​  … c (1,C)​
c (2,1)​ c (2,2)  … c (2,C)
​:
c (R,1)​ c (R,2)​  … c (R,C)
​1 行目には、行数 R(1≦R≦50)と列数 C(1≦C≦50)がそれぞれ空白区切りで与えられる。
2 行目には、スタート地点の座標 (sy,sx) が空白区切りで与えられる。スタート地点が sy 行 
sx 列にあることを意味する。 
1≦sy≦R　かつ 1≦sx≦C である。
3 行目には、ゴール地点の座標 (gy,gx) が空白区切りで与えられる。ゴール地点が gy 行 
gx 列にあることを意味する。 
1≦gy≦R　かつ 1≦gx≦C であり、(gy,gx)≠(sy,sx)であることが保障されている。
4 行目から R 行、長さ C の文字列が 1 行ずつ与えられる。各文字は . もしくは # のいずれかであり、i 回目 (1≦i≦R) に与えられられる文字列のうち j 文字目 (1≦j≦C) について、その文字が . なら、マス (i,j) が空きマスであり、# なら、マス (i,j) が壁マスであることをあらわす。
盤面は壁マスで囲まれている。つまり、i=1,i=R,j=1,j=C のうちいずれか1つでも条件を満たすマス (i,j) について、c (i,j)​  は #である。また、スタート地点とゴール地点は必ず空きマスであり、スタート地点からゴール地点へは、空きマスを辿って必ずたどり着ける。

出力
スタート地点からゴール地点に移動する最小手数を 1 行に出力せよ。最後に改行を忘れないこと。

入力例1
7 8
2 2
4 5
########
#......#
#.######
#..#...#
#..##..#
##.....#
########

出力例1
11

入力例2
5 8
2 2
2 4
########
#.#....#
#.###..#
#......#
########

出力例2
10

図8のように進めば 10 手でたどり着くことが進むことができます(※Sはスタート、Gはゴールをあらわす)。
図8. 入出力例2において最小手数10を達成する進み方


047 - Bipartite Graph 
実行時間制限: 3 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
頂点数が N、辺の数が M のグラフが与えられます。各頂点には 1 から N までの番号が付けられており、i 番目の辺 (1≤i≤M) は頂点 A_{i}​  と頂点 B_{i}​  を双方向に結んでいます。
このグラフが二部グラフであれば Yes を、二部グラフでなければ No を出力してください。

制約
1≤N,M≤200000
1≤A_{i}​ <B_{i}​ ≤N (1≤i≤M)
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N M
A_{1}​  B_{1}
​⋮
A_{M}​  B_{M}
​ 
出力
与えられたグラフが二部グラフであれば Yes を、二部グラフでなければ No を出力してください。

入力例 1
8 7
1 5
1 6
2 7
3 7
4 6
5 8
6 8

出力例 1
Yes

入力例 2
6 7
1 6
2 6
3 6
2 4
3 5
1 3
1 4

出力例 2
No


048 - Small Multiple
実行時間制限: 2 sec / メモリ制限: 256 MB

配点 : 
700 点

問題文
K の正の倍数の 10 進法での各桁の和としてありうる最小の値を求めてください。

制約
2≤K≤10^5
K は整数である

入力
入力は以下の形式で標準入力から与えられる。
K

出力
K の倍数の 10 進法での各桁の和としてありうる最小の値を出力せよ。

入力例 1
6

出力例 1
3

解説 1
12=6×2 が最小値を達成します。

入力例 2
41

出力例 2
5

解説 2
11111=41×271 が最小値を達成します。

入力例 3
79992

出力例 3
36


049 - Fibonacci Easy (mod 1000000007) 
実行時間制限: 10 sec / メモリ制限: 1024 MB

配点 : 
1000 点

問題文
以下の漸化式で定められるフィボナッチ数列の第 N 項 a N​  を 1000000007 (=10 9 +7) で割った余りを求めてください。
a 1​ =1,a 2 =1
a n​ =a n−1​ +a n−2​  (n≥3)

制約
3≤N≤10^7
N は整数

入力
入力は以下の形式で標準入力から与えられます。
N

出力
答えを整数で出力してください。

入力例 1
6

出力例 1
8

解説 1
a=(1,1,2,3,5,8,…) です。
N=6 なので、第 6 項 である 8 を出力してください。

入力例 2
8691200

出力例 2
922041576

解説 2
1000000007 で割った余りを求めることに注意してください。


050 - Power 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点 : 
1000 点

問題文
a b  を 1000000007 (=10^9 +7) で割った余りを計算してください。

制約
1≤a≤100
1≤b≤10^9
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
a b

出力
答えを整数として出力してください。

入力例 1
5 23

出力例 1
871631629

解説 1
5^23 = 11920928955078125 ですが、これを 10^9 +7 で割った余りである 871631629 を出力してください。

入力例 2
97 998244353

出力例 2
934801994

解説 2
b の値は大きくなることがあります。


051 - Combination Hard 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点 : 
1000 点

問題文
無限に大きいマス目があり、各マスは 2 つの整数を用いてマス (a,b) という形で表されます。すべてのマス (a,b) に対して、右隣のマスは (a+1,b) であり、真上のマスは (a,b+1) です。
マス (0,0) から出発し、上か右に隣り合うマスへの移動を繰り返すことでマス (X,Y) にたどり着く方法は何通りありますか。答えを 1000000007（素数）で割った余りを求めてください。

制約
1≤X,Y≤10^5
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
X Y

出力
答えを出力してください。

入力例 1
1 2

出力例 1
3

解説 1
(0,0) から (1,2) にたどり着く方法は、以下の 3 通りです。
(0,0)→(0,1)→(0,2)→(1,2)
(0,0)→(0,1)→(1,1)→(1,2)
(0,0)→(1,0)→(1,1)→(1,2)

入力例 2
869 120

出力例 2
445891023

解説 2
1000000007 (=10^9+7) で割った余りを求めることに注意してください。



052 - Knight
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点 : 
400 点

問題文
二次元グリッドの原点 (0,0) にチェスのナイトの駒があります。
ナイトの駒はマス (i,j) にあるとき (i+1,j+2) か (i+2,j+1) のどちらかのマスにのみ動かすことができます。
ナイトの駒をマス (X,Y) まで移動させる方法は何通りありますか？
10^9+7 で割った余りを求めてください。

制約
1≤X≤10^6
1≤Y≤10^6
入力中のすべての値は整数である。

入力
入力は以下の形式で標準入力から与えられる。
X Y

出力
ナイトの駒を (0,0) から (X,Y) まで移動させる方法の数を、10^9+7 で割った余りを出力せよ。

入力例 1
3 3

出力例 1
2

解説 1
(0,0)→(1,2)→(3,3) と (0,0)→(2,1)→(3,3) の 2 通りが考えられます。

入力例 2
2 2

出力例 2
0

解説 2
(2,2) にナイトの駒を移動させることはできません。

入力例 3
999999 999999

出力例 3
151840682

解説 3
方法の数を 10^9+7 で割った余りを出力してください。


053 - Sum of 4^N
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
正の整数 N が与えられるので、4^0 +4^1 +⋯+4^N を 1000000007 で割った余りを出力してください。

制約
1≤N≤10^18
N は整数

入力
入力は以下の形式で標準入力から与えられます。
N

出力
4^0 +4^1 +⋯+4^N  を 1000000007 で割った余りを出力してください。

入力例 1
3

出力例 1
85

解説 1
4^0 +4^1 +4^2 +4^3 =1+4+16+64=85 なので、85 を出力します。

入力例 2
45

出力例 2
414031736

解説 2
4^0 +4^1 +⋯+4^45 =1650586719047173699865498965 なので、1650586719047173699865498965 を 1000000007 で割った余り 414031736 を出力します。


054 - Fibonacci Hard (mod 1000000000) 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点 : 
1000 点

問題文
以下の漸化式で定められるフィボナッチ数列の第 N 項 a_{N}​  を 10^9  で割った余りを出力してください。
a_{1}​ =1,a_{2}​ =1
a_{n}​ =a_{n−1}​ +a_{n−2}​ (n≥3)
なお、書籍の問題文中では「下 9 桁」となっていますが、桁のはじめのゼロは取って出力してください。例えば a_{N}​ =1012345678 の場合、012345678 ではなく 12345678 という出力が正解となります。

制約
3≤N≤10^18
N は整数

入力
入力は以下の形式で標準入力から与えられます。
N

出力
答えを出力してください。

入力例 1
10

出力例 1
55

解説 1
フィボナッチ数列は a=(1,1,2,3,5,8,13,21,34,55,…) であり、第 10 項は 55 です。

入力例 2
876543210987654321

出力例 2
942619746

10^9 で割った余りを求めることに注意してください。


055 - Recurrence Formula 1 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点 : 
1000 点

問題文
以下の漸化式で定められる数列の第 N 項 a_{N}​  を 1000000007(=10^9 +7) で割った余りを求めてください。
a_{1}​ =1,a_{2}​ =1
a_{n}​ =2a_{n－1​} +a_{n－2}​ (n≥3)

制約
3≤N≤10^18
N は整数

入力
入力は以下の形式で標準入力から与えられます。
N

出力
答えを出力してください。

入力例 1
10

出力例 1
1393

解説 1
a=(1,1,3,7,17,41,99,239,577,1393,...) であり、第 10 項は 1393 です。

入力例 2
876543210987654321

出力例 2
841102483

10^9 +7 で割った余りを求めることに注意してください。


056 - Recurrence Formula 2 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点 : 
1000 点

問題文
以下の漸化式で定められる数列の第 N 項 a_{N}​  を 1000000007 (=10^9 +7) で割った余りを求めてください。
a_{1}​ =1,a_{2}​ =1,a_{3}​ =2
a_{n}​ =a_{n－1}​ +a_{n－2}​ +a_{n−3}​  (n≥4)
なお、このような数列 (a_{1}​ ,a_{2}​ ,a_{3}​ ,⋯) をトリボナッチ数列といいます。

制約
4≤N≤10^18 
N は整数

入力
入力は以下の形式で標準入力から与えられます。
N

出力
答えを出力してください。

入力例 1
10
出力例 1
149

解説 1
a=(1,1,2,4,7,13,24,44,81,149) であり、第 10 項は 149 です。

入力例 2
876543210987654321

出力例 2
639479200

解説 2
10^9 +7 で割った余りを求めることに注意してください。

n = 1 の場合、数列は 1 
n = 2 の場合、数列は 1 
n = 3 の場合、数列は 2 
n = 4 の場合、数列は 4 （1+1+2）
n = 5 の場合、数列は 7 （1+2+4）
n = 6 の場合、数列は 13 （2+4+7）
n = 7 の場合、数列は 24 （4+7+13）
n = 8 の場合、数列は 44 （7+13+24）
n = 9 の場合、数列は 81 （13+24+44）
n = 10 の場合、数列は 149 （24+44+81）


057 - Domino Tiling 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点 : 
1000 点

問題文
K×N の長方形のマス目を、1×2 または 2×1 の長方形のタイルで完全に敷き詰める方法の数を 1000000007 (=10 9 +7) で割った余りを求めてください。
ただし、以下の条件を満たす敷き詰め方を正しい敷き詰めであるとします。
・タイルはマス目からはみ出してはならず、また異なるタイル同士が重なってはならない。
・全てのタイルは、マス目のちょうど 2 マスを完全に覆う。
また、回転や裏返しによって一致する敷き詰め方も、異なるものとして数えます。

制約
2≤K≤4
5≤N≤10^18
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
K N

出力
答えを出力してください。

部分点
この問題では、初期得点を 0 点として、以下の条件で得点が加算されます。
K=2 を満たすケース全てに正答した場合、 2 点が加算される。
K=3 を満たすケース全てに正答した場合、 30 点が加算される。
K=4 を満たすケース全てに正答した場合、 400 点が加算される。
全てのケースに正答した場合、 568 点が加算される。
これにより、最終的な満点は 1000 点となる。

入力例 1
2 6

出力例 1
13

入力例 2
3 8

出力例 2
153

入力例 3
4 7

出力例 3
781


058 - Move on Squares 1 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
下記のような無限に広がるマス目に、一つのコマが置かれています。あなたはこれから、「駒を上下左右に隣り合うマスに動かすという操作を ちょうど N 回 行わなければなりません。
最初にコマが置かれたマスから右に a 個分動かした後、上に b 個分動かした場所をマス (a,b) とするとき、駒を最終的にマス (X,Y) に移動させることが可能か判定してください。

制約
1≤N≤10^9
−10^9 ≤X≤10^9 
−10^9 ≤Y≤10^9
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N X Y

出力
マス (X,Y) にたどり着けるなら Yes、そうでないならば No を出力してください。

入力例 1
10 2 2

出力例 1
Yes

解説 1
下図のような経路でコマを動かせば目的を達成できるため、答えは Yes です。

入力例 2
9 3 1

出力例 2
No

解説 2
どのようにしても目的を達成できないことが証明できるため、答えは No です。


059 - Power of Two 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
2^N  の一の位を求めてください。

制約
1≤N≤10^12
N は整数

入力
入力は以下の形式で標準入力から与えられます。
N

出力
答えを出力してください。

入力例 1
10

出力例 1
4

解説 1
2^10=1024 なので、一の位は 4 です。


060 - Stones Game 1 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
N 個の石があり、プレイヤー 2 人が交互に石を取り合います。
各ターンでは 1 個以上 3 個以下の石を取る必要があり、初めて石を取れなくなった方が負けです。
整数 N が与えられるので、両者が最善を尽くしたとき、どちらが勝つかを求めてください。

制約
1≤N≤10^12
N は整数

入力
入力は以下の形式で標準入力から与えられます。
N

出力
先手必勝の場合 First、後手必勝の場合 Second と出力してください。

入力例 1
4

出力例 1
Second

解説 1
先手が石を 1 個取った場合は後手は 3 個、先手が 2 個取った場合は後手は 2 個、先手が 3 個取った場合は後手は 1 個取れば勝てるため、N=4 の場合は後手必勝です。


061 - Stones Game 2 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
N個の石があります。各ターンでは、今残っている石の数をa個とするとき、1個以上a/2個以下の石を取らなければなりません。また、初めて石を取れなくなったほうが負けです。両者が最善を尽くした時、先手と後手どちらが勝つかを求めるプログラムを作成してください。

制約
1≤N≤10 18
ただしsmallと名がつくテストケースについては、追加で以下の制約を満たします。
1≤N≤10 5

入力
入力は以下の形式で標準入力から与えられます。
N

出力
先手が勝つならばFirst、後手が勝つならばSecondと出力してください。

入力例 1
2

出力例 1
First

解説 1
先手は必ず 1 個の石を取ります。
後手は石をこれ以上取ることができないため、先手が勝ちます。

入力例 2
3

出力例 2
Second

入力例 3
1000000000000000000

出力例 3
First


062 - Teleporter
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点: 
400 点

問題文
高橋王国には N 個の町があります。町は 1 から N まで番号が振られています。
それぞれの町にはテレポーターが 1 台ずつ設置されています。町 i(1≤i≤N) のテレポーターの転送先は町 A i​  です。
高橋王は正の整数 K が好きです。わがままな高橋王は、町 1 から出発してテレポーターをちょうど K 回使うと、どの町に到着するかが知りたいです。
高橋王のために、これを求めるプログラムを作成してください。

制約
2≤N≤2×10^5
1≤A i​ ≤N
1≤K≤10^18

入力
入力は以下の形式で標準入力から与えられる。
N K
A 1​  A 2​  … A N​

出力
町 1 から出発してテレポーターをちょうど K 回使ったとき到着する町の番号を出力せよ。

入力例 1
4 5
3 2 4 1

出力例 1
4

解説 1
町 1 から出発してテレポーターを 5 回使うと、1→3→4→1→3→4 と移動します。

入力例 2
6 727202214173249351
6 5 2 5 3 2

出力例 2
2


063 - Move on Squares 2 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
N×N のマス目があります。
左上のマスから出発し、上下左右に隣り合うマスに移動することを繰り返しながら出発地点に戻る経路のうち、すべてのマスを（最初と最後を除き）ちょうど一回ずつ 通るものが存在するか、判定してください。

制約
2≤N≤10^9
N は整数

入力
入力は以下の形式で標準入力から与えられます。
N

出力
条件を満たすものが存在するならば Yes、存在しないならば No を出力してください。

入力例 1
2
出力例 1
Yes

解説 1
上から i 番目、左から j 番目のマスを (i,j) と表す時、以下のように移動すれば条件を満たすため、Yes と出力すれば正解となります。
(1,1)→(1,2)→(2,1)→(2,2)→(1,1)

入力例 2
3

出力例 2
No

解説 2
N=3 の場合は条件を満たす経路が存在しないため、No と出力すれば正解となります。


064 - All Zero 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
長さ N の数列 A=(A 1​ ,A 2​ ,…,A N​ ) が与えられます。あなたは数列に対して、以下の操作を ちょうど K 回行います。
1 以上 N 以下の整数 x を選び、A x​  に +1 または −1 を加算する。数列の要素を全てゼロにすることができるか、すなわち (A 1​ ,A 2​ ,…,A N​ )=(0,0,…,0) にできるか判定してください。

制約
1≤N≤50
1≤K≤50
0≤A i​ ≤50
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N K
A 1​  A 2​  ⋯ A N​

出力
数列の要素を全てゼロにできるならば Yes、そうでないならば No を出力してください。

入力例 1
3 3
2 0 1

出力例 1
Yes

解説 1
例えば、以下のように操作すると目的を達成できます。よって Yes を出力すると正解です。
A 1​  に −1 を加算する。A ​  に −1 を加算する。A 1​  に −1 を加算する。

入力例 2
5 2
1 0 0 0 0

出力例 2
No

解説 2
どのようにしても全ての要素を 0 にすることはできません。ここで、ちょうど K 回操作するということに注意してください。


065 - Bishop
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点 : 
200 点

問題文
縦 H マス、横 W マスの盤面があります。 この盤面の左上隅のマスに角行の駒が置かれています。 駒が 0 回以上の好きな回数の移動を繰り返して到達できるマス目は何個あるでしょうか？
ただし、角行の駒は斜めに動くものとします。 より厳密には、駒が上から r 1​  番目、左から c 1​  番目のマスから上から r 2​  番目、左から c 2​  番目のマス目に動ける条件は
r 1​ +c 1​ =r 2​ +c 2​
r 1​ −c 1​ =r 2​ −c 2​ 
のうちちょうど一方が成立することです。たとえば、駒が図の位置にあるとき、一回で移動できる場所は赤くなっているマスです。

制約
1≤H,W≤10^9
入力は全て整数である。

入力
入力は以下の形式で標準入力から与えられる。
H W

出力
駒が到達できるマス目の個数を出力せよ。

入力例 1
4 5

出力例 1
10

入力例 2
7 3

出力例 2
11

入力例 3
1000000000 1000000000

出力例 3
500000000000000000


066 - Three Cards
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
黒色・白色・灰色のカードが 1 枚ずつあります。
以下の条件のうち一つ以上を満たすように、各カードに 1 以上 N 以下の整数を書き込む方法が何通りあるかを求めてください。
・黒色と白色のカードに書かれている整数の差の絶対値は K 以上
・黒色と灰色のカードに書かれている整数の差の絶対値は K 以上
・灰色と白色のカードに書かれている整数の差の絶対値は K 以上

制約
1≤N≤100000
1≤K≤min(5,N−1)
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N K

出力
答えを出力してください。

入力例 1
3 1
出力例 1
24

解説 1
例えば、黒色・白色・灰色のカードにそれぞれ 2,3,2 を書いた場合、条件のうち一つ以上を満たします。
また、黒色・白色・灰色のカードにそれぞれ 1,1,1 を書いた場合、すべての条件を満たしません。


067 - Cross Sum（★2） 
実行時間制限: 5 sec / メモリ制限: 1024 MB

配点: 
2 点

問題文
H 行 W 列のマス目があります。上から i (1≤i≤H) 行目、左から  (1≤j≤W) 列目にあるマス (i,j) には、整数 A i,j​  が書かれています。 すべてのマス (i,j) (1≤i≤H,1≤j≤W) について、以下の値を求めてください。
マス (i,j) と同じ行または同じ列にあるマス（自分自身を含む）に書かれている整数をすべて合計した値

制約
2≤H,W≤2000
1≤A i,j​ ≤99
入力は全て整数

入力
入力は以下の形式で標準入力から与えられます。
H W
A 1,1​  A 1,2​  ⋯ A 1,W​
A 2,1​  A 2,2​  ⋯ A 2,W​ 
⋮
A H,1​  A H,2​  ⋯ A H,W​

出力
マス (i,j) と同じ行または同じ列にあるマス（自分自身を含む）に書かれている整数をすべて合計した値を B i,j​  として、以下の形式で出力してください。
B 1,1​  B 1,2​  ⋯ B 1,W​
B 2,1​  B 2,2​  ⋯ B 2,W
​ ⋮
B H,1​  B H,2​  ⋯ B H,W​

入力例 1
3 3
1 1 1
1 1 1
1 1 1

出力例 1
5 5 5
5 5 5
5 5 5

入力例 2
4 4
3 1 4 1
5 9 2 6
5 3 5 8
9 7 9 3

出力例 2
28 28 25 26
39 33 40 34
38 38 36 31
41 41 39 43

解説 1
マス (1,1) と同じ行または同じ列にあるマスに書かれている整数の合計は次の通りです。
3+1+4+1+5+5+9=28

入力例 3
2 10
31 41 59 26 53 58 97 93 23 84
62 64 33 83 27 95 2 88 41 97

出力例 3
627 629 598 648 592 660 567 653 606 662
623 633 651 618 645 650 689 685 615 676

入力例 4
10 10
83 86 77 65 93 85 86 92 99 71
62 77 90 59 63 76 90 76 72 86
61 68 67 79 82 80 62 73 67 85
79 52 72 58 69 67 93 56 61 92
79 73 71 69 84 87 98 74 65 70
63 76 91 80 56 73 62 70 96 81
55 75 84 77 86 55 96 79 63 57
74 95 82 95 64 67 84 64 93 50
87 58 76 78 88 84 53 51 54 99
82 60 76 68 89 62 76 86 94 89

出力例 4
1479 1471 1546 1500 1518 1488 1551 1466 1502 1546
1414 1394 1447 1420 1462 1411 1461 1396 1443 1445
1388 1376 1443 1373 1416 1380 1462 1372 1421 1419
1345 1367 1413 1369 1404 1368 1406 1364 1402 1387
1416 1417 1485 1429 1460 1419 1472 1417 1469 1480
1410 1392 1443 1396 1466 1411 1486 1399 1416 1447
1397 1372 1429 1378 1415 1408 1431 1369 1428 1450
1419 1393 1472 1401 1478 1437 1484 1425 1439 1498
1366 1390 1438 1378 1414 1380 1475 1398 1438 1409
1425 1442 1492 1442 1467 1456 1506 1417 1452 1473


068 - Number of Multiples 2 
実行時間制限: 1 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
1 以上 N 以下の整数の中で、V 1​ ,V 2​ ,…,V K  のいずれかの倍数であるものの個数を出力するプログラムを作成してください。

制約
1≤N≤10^12
1≤K≤10
1≤V i​ ≤50
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N K
V 1​  V 2​  ⋯ V K​ 

出力
答えを出力してください。

入力例 1
100 3
2 3 5

出力例 1
74

入力例 2
100 3
2 4 6

出力例 2
50

入力例 3
10000000000000 10
13 17 19 23 29 31 37 41 43 47

出力例 3
3324865541894


069 - Product Max
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点 : 
200 点

問題文
整数 a,b,c,d が与えられます。 a≤x≤b,c≤y≤d を満たす整数 x,y について、x×y の最大値はいくつですか。

制約
−10^9 ≤a≤b≤10^9
−10^9 ≤c≤d≤10^9
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられる。
a b c d

出力
答えを出力せよ。

入力例 1
1 2 1 1

出力例 1
2

解説 1
x=1,y=1 のとき x×y=1、x=2,y=1 のとき x×y=2 であるため、答えは 2 です。

入力例 2
3 5 -4 -2

出力例 2
-6

解説 2
答えが負になることもあります。

入力例 3
-1000000000 0 -1000000000 0

出力例 3
1000000000000000000


070 - Axis-Parallel Rectangle
実行時間制限: 2 sec / メモリ制限: 256 MB

配点 : 
400 点

問題文
2次元座標上に N 個の点があります。i(1≦i≦N) 番目の点の座標は (x i​ ,y i​ ) です。
長方形の内部に N 点のうち K 個以上の点を含みつつ、それぞれの辺がX軸かY軸に平行な長方形を考えます。このとき、長方形の辺上の点は長方形の内部に含みます。
それらの長方形の中で、最小の面積となるような長方形の面積を求めてください。

制約
2≦K≦N≦50
−10^9 ≦x i​ ,y i​ ≦10^9 (1≦i≦N)
x i​ ≠ x j​ (1≦i<j≦N)
y i​ ≠ y j​ (1≦i<j≦N)
入力値はすべて整数である

入力
入力は以下の形式で標準入力から与えられる。
N K
x 1​  y 1​ 
:
x N​  y N​

出力
条件を満たす長方形の中で最小面積となるような長方形の面積を出力せよ。

入力例 1
4 4
1 4
3 3
6 2
8 1

出力例 1
21

解説 1
条件を満たす最小面積となる長方形の 1 つは　(1,1),(8,1),(1,4),(8,4) の 4 つの頂点で構成されます。
その面積は (8−1)×(4−1)=21 であるため、21 と出力します。

入力例 2
4 2
0 0
1 1
2 2
3 3

出力例 2
1

入力例 3
4 3
-1000000000 -1000000000
1000000000 1000000000
-999999999 999999999
999999999 -999999999

出力例 3
3999999996000000001

解説 3
オーバーフローに注意してください。


071 - Linear Programming
実行時間制限: 10 sec / メモリ制限: 1024 MB

配点: 
1000 点

問題文
正の整数Nと正の整数の組(a1​ ,b1​ ,c1​ ),(a2​ ,b2​ ,c2​ ),...,(aN​ ,bN​ ,cN​ )が与えられます。
以下の条件式をすべて満たす実数の組(x,y)の中で、x+yの最大値を求めるプログラムを作成してください。
a1*x + b1​*y ≤ c1​
a2​*x + b2​*y ≤ c2​
(中略)
aN​*x + bN​*y ≤ cN

制約
1≤ N ≤500
1≤ ai​ ,bi​ ,ci​ ≤10^9
x+yが最大となるとき、xとyは共に正の実数である
この制約はO(N^3)時間で解くことを許容する制約です。

入力
入力は以下の形式で標準入力から与えられます。
N
a1​  b1​  c1​
a2​  b2​  c2
.
.
aN​  bN​  cN​

出力
x+yの最大値を出力してください。 なお、想定解答との絶対誤差または相対誤差が 10^−6 以下であれば正解として扱われます。

入力例 1
2
1 3 3
3 1 3

出力例 1
1.5


072 - Max GCD 2  / 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点 : 
300 点

問題文
整数 
A,B が与えられます。整数 x,y を A≤x<y≤B となるように選ぶときの、gcd(x,y) の最大値を求めてください。なお、gcd(x,y) は x と y の最大公約数を表します。

制約
A,B は整数
1≤A<B≤2×10^5
 
入力
入力は以下の形式で標準入力から与えられる。
A B

出力
答えを出力せよ。

入力例 1
2 4

出力例 1
2

解説 1
A≤x<y≤B を満たす (x,y) の選び方は (2,3),(2,4),(3,4) の 3 つです。それぞれ最大公約数は 1,2,1 であるので、最大値は 2 です。

入力例 2
199999 200000

出力例 2
1

解説 2
gcd(199999,200000)=1 です。

入力例 3
101 139

出力例 3
34


072 - Max GCD 2
実行時間制限: 2 sec / メモリ制限: 1024 MB

問題文
整数 A,B が与えられます。整数 x,y を A≤x<y≤B となるように選ぶときの、gcd(x,y) の最大値を求めてください。なお、gcd(x,y) は x と y の最大公約数を表します。

制約
A,B は整数
1≤A<B≤2×10^5

入力
入力は以下の形式で標準入力から与えられる。
A B

出力
答えを出力せよ。

入力例 1
2 4

出力例 1
2

解説 1
A≤x<y≤B を満たす (x,y) の選び方は (2,3),(2,4),(3,4) の 3 つです。
それぞれ最大公約数は 1,2,1 であるので、最大値は 2 です。

入力例 2
199999 200000

出力例 2
1

解説 2
gcd(199999,200000)=1 です。

入力例 3
101 139

出力例 3
34


073 - Sum of Maximum
実行時間制限: 1 sec / メモリ制限: 1024 MB

問題文
N 個の整数 A 1​ ,A 2​ ,⋯,A N​  から 1 個以上を選ぶ方法は 2^N −1 通りあります。
これらについて、「選んだ整数の最大値」をすべて足した値はいくつになりますか。答えを 
1000000007 で割った余りを出力してください。

制約
1≤N≤300000
1≤A 1​ <A 2​ <...<A N ≤10^9
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N
A 1​  A 2​  ⋯ A N​

出力
答えを出力してください。

入力例 1
2
3 5

出力例 1
13

解説 1
{3}、{5}、{3,5} の 3 通りの選び方があるため、答えは 3+5+5=13 です。


074 - Sum of difference Easy 
実行時間制限: 2 sec / メモリ制限: 1024 MB

問題文
N 個の整数 A 1​ ,A 2​ ,…,A N​  があります。ここで、A 1​ <A 2​ <⋯<A N​  を満たします。
\sum_{i=1}^{N}sum_{j=i+1}^{N}(A_{j}-A_{i}) の値を計算してください。

制約
2≤N≤200000
1≤A 1​ <A 2​ <⋯<A N​ ≤10^6
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N
A 1​  A 2​  ⋯ A N​

出力
答えを出力してください。

入力例 1
3
1 3 5

出力例 1
8

解説 1
(A 2​ −A 1​ )+(A 3​ −A 1​ )+(A 3​ −A 2​ )=2+4+2=8 であるため、8 と出力すれば正解です。


075 - Pyramid 
実行時間制限: 2 sec / メモリ制限: 1024 MB

問題文
下図のような N 段のピラミッドがあり、最下段には左から順に整数 A 1​ ,A 2​ ,…,A N が書かれています。
下の段から順に、「隣り合った 2 つの数を足した答えを上の段に書く」という操作を行ったとき、一番上に書かれる整数はいくつですか。
答えを 1000000007 (=10^9 +7) で割った余りを出力してください。

制約
2≤N≤200000
1≤A i​ ≤10^9
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられます。
N
A 1​  A 2​  … A N​

出力
一番上に書かれる整数を 1000000007 (=10^9 +7) で割った余りを出力してください。

入力例 1
5
20 22 25 43 50

出力例 1
480

解説 1
ピラミッドには以下のように整数が書かれます。よって、480 と出力すれば正解です