A - Three Threes / 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点 : 
100 点

問題文
1 以上 9 以下の整数 N が入力として与えられます。
数字 N を N 個繋げて得られる文字列を出力してください。

制約
N は 1 以上 9 以下の整数

入力
入力は以下の形式で標準入力から与えられる。

N
出力
答えを出力せよ。


B - Pentagon / 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点 : 
200 点

問題文
以下の図で表される正五角形 P があります。
P の点 S(1)​  と点 S(2)​  を結ぶ線分と、点 T(1)​  と点 T(2)​  を結ぶ線分の長さが等しいか判定してください。

制約
S(1)​ ,S(2)​ ,T(1)​ ,T(2)​  は A, B, C, D, E のいずれかの文字
S(1)​ ≠ S(2)​
T(1)​ ≠ T(2)
​
入力
入力は以下の形式で標準入力から与えられる。
S(1)​S(2)​
T(1)​T(2)​

出力
P の点 S(1)​  と点 S(2)​  を結ぶ線分と、点 T(1)​  と点 T(2)​  を結ぶ線分の長さが等しい場合 Yes を、等しくない場合 No を出力せよ。

入力例 1
AC
EC

出力例 1
Yes

解説 1
P の点 A と点 C を結ぶ線分と、P の点 E と点 C を結ぶ線分の長さは等しいです。

入力例 2
DA
EA

出力例 2
No

解説 2
P の点 D と点 A を結ぶ線分と、P の点 E と点 A を結ぶ線分の長さは等しくありません。



C - Repunit Trio 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点 : 
300 点

問題文
十進法ですべての桁の数字が 1 である整数をレピュニットと呼びます。レピュニットを小さい順に並べると 1,11,111,… です。
ちょうど 3 つのレピュニットの和として表せる整数のうち N 番目に小さいものを求めてください。

制約
N は 1 以上 333 以下の整数

入力
入力は以下の形式で標準入力から与えられる。
N

出力
答えを出力せよ。

入力例 1
5

出力例 1
113

解説 1
ちょうど 3 つのレピュニットの和として表せる整数を小さい順に並べると 3,13,23,33,113,… です。
例えば 113 は 113=1+1+111 と表せます。
3 つのレピュニットは相異ならなくてもよいことに注意してください。

入力例 2
19

出力例 2
2333

入力例 3
333

出力例 3
112222222233


D - Erase Leaves
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点 : 
400 点

問題文
頂点 1, 頂点 2,…, 頂点 N の N 個の頂点からなる木が与えられます。 i 番目 (1≤i<N) の辺は頂点 u(i)​  と v(i)​  を結んでいます。
次の操作を好きな回数繰り返すことを考えます。
葉である頂点 v を 1 つ選び、頂点 v およびそれに接続する辺をすべて削除する。
頂点 1 を削除するまでに最小で操作を何回行う必要があるか求めてください。
木とは？
木とは、無向グラフのうち連結であって閉路がないものです。 詳しくはこちらをご覧ください
https://ja.wikipedia.org/wiki/%E6%9C%A8_(%E6%95%B0%E5%AD%A6)
葉とは？
木の葉とは、木の頂点のうち次数がたかだか 
1 であるものです。

制約
2≤N≤3×10^5
1≤u(i)​ <v(i)​ ≤N (1≤i<N)
与えられるグラフは木
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられる。
N
u(1)​  v(1)
u(2)​  v(2)
⋮
u(N−1​)  v(N−1​)

出力
答えを 1 行で出力せよ。

入力例 1
9
1 2
2 3
2 4
2 5
1 6
6 7
7 8
7 9

出力例 1
5


E - Takahashi Quest / 
実行時間制限: 2 sec / メモリ制限: 1024 MB

配点 : 
450 点

問題文
高橋くんは冒険に出ようとしています。

冒険では、N 個の出来事が起こります。 i 番目 (1≤i≤N) の出来事は整数の組 (t i​ ,x i​ ) (1≤t i​ ≤2,1≤x i​ ≤N) で表され、次のような出来事です。
t i​ =1 のとき、タイプ x i​  のポーションを 1 つ発見する。高橋くんは、発見したポーションを拾うか捨てるかのどちらかを選択する。
t i​ =2 のとき、タイプ x i​  のモンスター 1 体と遭遇する。
高橋くんがタイプ x i​  のポーションを持っている場合、それを 1 つ消費することでモンスターを撃退することができる。モンスターを撃退しなかった場合、高橋くんは敗北する。
高橋くんが敗北することなく全てのモンスターを撃退することができるか判定してください。
高橋くんが全てのモンスターを撃退することができない場合、-1 を出力してください。
高橋くんが全てのモンスターを撃退することができる場合、高橋君が冒険の途中で持っているポーションの個数の最大値を 
K とします。 高橋くんが敗北しないような戦略全体にわたる K の最小値を K min​  とします。 K min​  の値と、K min​  を達成する高橋くんの行動を出力してください。

制約
1≤N≤2×10^5
1≤t i​ ≤2 (1≤i≤N)
1≤x i​ ≤N (1≤i≤N)
入力はすべて整数

入力
入力は以下の形式で標準入力から与えられる。
N
t 1​  x 1​
t 2​  x 2​
⋮
t N​  x N​
 
出力
高橋くんが全てのモンスターを撃退することができない場合、-1 を出力せよ。 
高橋くんが全てのモンスターを撃退することができる場合、1 行目には K min​  の値を、2 行目には t i​ =1 であるような i すべてについて昇順に、i 番目の出来事で発見したポーションを拾うなら 1 を、拾わないなら 0 を空白区切りで出力せよ。 
K min​  を達成し、高橋くんが敗北せず冒険を終えられるような行動が複数ある場合、どれを出力しても構わない。

入力例 1
13
1 2
1 3
1 1
1 3
1 2
2 3
1 3
1 3
2 3
1 3
2 2
2 3
2 1

出力例 1
3
1 1 1 0 0 1 0 1

解説 1
出力例は、次のような行動に対応しています。

タイプ 
2,3,1 のポーションをこの順に発見する。これらのポーションをすべて拾う。
タイプ 
3,2 のポーションをこの順に発見する。これらのポーションをいずれも拾わない。
タイプ 
3 のモンスターと遭遇する。持っているタイプ 
3 のポーションを 
1 つ消費してモンスターを撃退する。
タイプ 
3 のポーションを発見する。このポーションを拾う。
タイプ 
3 のポーションを発見する。このポーションを拾わない。
タイプ 
3 のモンスターと遭遇する。持っているタイプ 
3 のポーションを 
1 つ消費してモンスターを撃退する。
タイプ 
3 のポーションを発見する。このポーションを拾う。
タイプ 
2 のモンスターと遭遇する。持っているタイプ 
2 のポーションを 
1 つ消費してモンスターを撃退する。
タイプ 
3 のモンスターと遭遇する。持っているタイプ 
3 のポーションを 
1 つ消費してモンスターを撃退する。
タイプ 
1 のモンスターと遭遇する。持っているタイプ 
1 のポーションを 
1 つ消費してモンスターを撃退する。
この行動では、
K の値は 
3 となります。

K≤2 として敗北しない方法はないので、求める 
K 
min
​
  の値は 
3 です。 
K=3 を満たして高橋くんが敗北しない行動は複数ありますが、どれを出力しても構いません。

入力例 2
Copy
4
2 3
1 4
2 1
1 2
出力例 2
Copy
-1
高橋くんはかならず最初に遭遇するモンスターに敗北してしまいます。