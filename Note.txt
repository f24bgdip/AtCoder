int_max = 2^31 − 1 = 2,147,483,647 ≒ 1,000,000,000 = 10^9 = 1e9

置換
(\w) (\w)​
$1($2)

2-1. 「水色コーダー」で要求される 4 つのこと
AtCoder で水色コーダー、つまりレーティング 1200 に到達するには、

AtCoder Beginner Contest で確率 8 割以上で 4 問正解できる
AtCoder Beginner Contest で確率 3-4 割で 5 問正解できる
AtCoder Beginner Contest の問題をある程度早く解くことができる
目安は、A 問題 1 分、B 問題 4 分、C 問題 10 分、D 問題 25 分
ことが要求されます。そのためには、以下の 4 つのことができれば良いと考えます。（もちろん、茶色コーダーで要求される 4 つのこと は全てクリアしている必要があります。）

条件 1
標準ライブラリ（STL）を理解し、コンテストでもそれを使えるようになる。
ちなみに、C++ の場合、使えてほしい STL は以下の 25 個。

abs	sin/cos/tan	string	min/max	swap
__gcd	rand	clock	reverse	sort
vector	stack	queue	priority_queue	map
lower_bound	set	pair	tuple	assert
count	find	next_permutation	__builtin_popcount	bitset
条件 2
以下に書かれている、基本的なアルゴリズムとデータ構造を全て理解する。

アルゴリズム（12 個）

全探索（bit 全探索、順列全探索を含む）
二分探索
深さ優先探索（DFS）
幅優先探索（BFS）
動的計画法（bitDP などを含む）
ダイクストラ法（最短経路問題）
ワーシャルフロイド法（最短経路問題）
クラスカル法（最小全域木問題）
高速な素数判定法
べき乗を高速に計算するアルゴリズム
逆元を計算するアルゴリズム
累積和
データ構造（3 個）

グラフ（グラフ理論）
木
Union-Find
条件 3
条件 2 で紹介した基本的なアルゴリズムをコンテスト中に引き出し、それらを使えるようになる。
つまり、本記事で紹介する「基本アルゴリズム」が完全に身につく、ということ。

条件 4
15 行程度のプログラムであれば、ほぼバグらせずに書くことができる。
35 行程度のプログラムであれば、ある程度速く書くことができる。バグらせても、平均して 5 分以内でバグを解決できる。

※ 実際に、35 行程度のプログラムを、バグ取り含めて平均して 15 分で書けるようになれば、難しめの数学的考察が必要な問題が無い場合、AtCoder Beginner Contest で 4 問正解を 50 分以内で達成できることが多い。

補足
上の 4 つの条件を満たすようになれば、AtCoder Beginner Contest の D 問題までは 7 - 8 割解けるようになると思います。1 - 2 割は難しめの数学的考察が必要な問題が出題されますが、それを解かなくてもコーディングの速度と正確性を鍛えることによって、水色コーダーになることは十分可能です。

ちなみに、E 問題となれば数学的考察を必要とする問題も少し増えてきますが、典型アルゴリズムの活用で解ける問題が多いので、過去問を解いて演習量を増やせば、3 - 5 割くらいの確率で解けるようになっていくと思います。

参考
https://offers.jp/media/programming/a_1031#:~:text=C%20%E8%A8%80%E8%AA%9E%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E8%A6%8F%E7%B4%84%E3%81%AB%E3%81%AF%E3%80%81%E3%80%8EMISRA-%20C%20%E3%80%8F%E3%82%84%E3%80%8EIPA,%E7%B5%84%E8%BE%BC%E3%81%BF%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E9%96%8B%E7%99%BA%E5%90%91%E3%81%91%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E4%BD%9C%E6%B3%95%E3%82%AC%E3%82%A4%E3%83%89%E3%80%8F%E3%81%AA%E3%81%A9%E3%81%8C%E3%81%82%E3%82%8A%E3%81%BE%E3%81%99%E3%80%82%20%E3%81%93%E3%81%86%E3%81%97%E3%81%9F%E8%A6%8F%E7%B4%84%E3%81%AB%E6%BA%96%E6%8B%A0%E3%81%97%E3%81%A6%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E6%9B%B8%E3%81%91%E3%81%B0%E3%80%81%E5%BE%8C%E3%81%8B%E3%82%89%E3%83%A1%E3%83%B3%E3%83%86%E3%83%8A%E3%83%B3%E3%82%B9%E3%82%84%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%A2%E3%83%83%E3%83%97%E3%81%A7%E6%89%B1%E3%81%86%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AB%E3%82%82%E8%AA%AD%E3%81%BF%E3%82%84%E3%81%99%E3%81%84%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AB%E4%BB%95%E4%B8%8A%E3%81%8C%E3%82%8A%E3%81%BE%E3%81%99%E3%80%82%20%E8%A6%8F%E7%B4%84%E3%81%AB%E6%AD%A3%E3%81%97%E3%81%8F%E6%BA%96%E6%8B%A0%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF%E3%80%81%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E8%A6%8F%E7%B4%84%E3%81%AE%E5%84%AA%E5%85%88%E9%A0%86%E4%BD%8D%E3%82%92%E3%81%AF%E3%81%A3%E3%81%8D%E3%82%8A%E3%81%95%E3%81%9B%E3%82%8B%E3%81%93%E3%81%A8%E3%81%A8%E3%80%81%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%83%84%E3%83%BC%E3%83%AB%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%97%E3%81%A6%E7%A2%BA%E5%AE%9F%E3%81%AB%E3%83%AB%E3%83%BC%E3%83%AB%E3%82%92%E5%AE%88%E3%82%8B%E3%81%93%E3%81%A8%E3%81%8C%E9%87%8D%E8%A6%81%E3%81%A8%E3%81%84%E3%81%88%E3%81%BE%E3%81%99%E3%80%82%20%E8%A6%8F%E7%B4%84%E3%82%92%E6%AD%A3%E3%81%97%E3%81%8F%E7%90%86%E8%A7%A3%E3%81%97%E3%80%81%E8%B3%AA%E3%81%AE%E9%AB%98%E3%81%84%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E6%9B%B8%E3%81%8F%E3%81%9F%E3%82%81%E3%81%AB%E6%B4%BB%E7%94%A8%E3%81%97%E3%81%BE%E3%81%97%E3%82%87%E3%81%86%E3%80%82

自分のまとめ
https://onedrive.live.com/view.aspx?resid=86BD04412FFC280E%2184011&id=documents&wd=target%28Programming.one%7C53E6529E-405C-41DA-836E-82A51AEAD85D%2F2020%E5%B9%B43%E6%9C%8820%E6%97%A5%E3%80%80%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%81%A7%E3%82%88%E3%81%8F%E4%BD%BF%E3%81%86%E8%8B%B1%E5%8D%98%E8%AA%9E%E3%81%AE%E3%81%BE%E3%81%A8%E3%82%81%7CA877DE1E-613E-4376-9E74-E30E4A051258%2F%29
onenote:https://d.docs.live.net/86bd04412ffc280e/ドキュメント/Software%20development/Programming.one#2020年3月20日　プログラミングでよく使う英単語のまとめ&section-id={53E6529E-405C-41DA-836E-82A51AEAD85D}&page-id={A877DE1E-613E-4376-9E74-E30E4A051258}&end

VS code の自動整形
「Shift+Option+F(Mac)」で自動整形
clang-formatに基づいているらしい。

MISRA-C
http://www.c-lang.org/detail/misra_c.html

その他いろいろ
Visual Studio Codeで競プロ環境構築(導入編)
https://qiita.com/AokabiC/items/e9312856f588dd9303ed

